from flask import Flask, render_template
from flask_socketio import SocketIO, emit
import time
import threading
import subprocess

app = Flask(__name__)
app.config['SECRET_KEY'] = 'your_secret_key'
socketio = SocketIO(app)

# Hàm tính toán số và gửi dữ liệu lên client
def compute_and_send_data(name):
    comand='adb shell  logcat --pid=$(pidof -s '+name+')'
    adb_process = subprocess.Popen(comand, stdout=subprocess.PIPE)
    for line in iter(adb_process.stdout.readline, b''):
        print(line.decode('utf-8'))
        socketio.emit('update', {'number': line.decode('utf-8')}, namespace='/test')
        time.sleep(0.25)  # Dừng 0.25 giây

# Xử lý route cho trang web
@app.route('/')
def index():
    return render_template('index.html')

# Xử lý khi có kết nối từ client
@socketio.on('connect', namespace='/test')
def test_connect():
    print('Client connected')
    # # Bắt đầu một luồng mới để tính toán số và gửi dữ liệu lên client
    # thread = threading.Thread(target=compute_and_send_data)
    # thread.daemon = True
    # thread.start()

# Xử lý sự kiện nhận số ban đầu từ client
@socketio.on('start_counting', namespace='/test')
def start_counting(data):
    name = data['number']
    # Bắt đầu một luồng mới để tính toán số và gửi dữ liệu lên client
    thread = threading.Thread(target=compute_and_send_data, args=(name,))
    thread.daemon = True
    thread.start()

if __name__ == '__main__':
    socketio.run(app, debug=True,host='0.0.0.0', port=8099)
